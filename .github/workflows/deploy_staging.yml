name: Deploy to Staging

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Preview
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/rb-cmp-backend:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Create deployment directory
          mkdir -p ~/rb-backend-deploy
          cd ~/rb-backend-deploy
          
          # Stop existing services
          docker-compose down || true
          
          # Clean up old images
          docker image prune -f
          
    - name: Copy docker-compose.yml to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.dev.yml"
        target: "~/rb-backend-deploy/docker-compose.yml"
        
    - name: Start services with docker-compose
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/rb-backend-deploy
          
          # Set environment variables and start services
          export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
          export PHOENIX_API_KEY="${{ secrets.PHOENIX_API_KEY }}"
          export PHOENIX_ENDPOINT="${{ secrets.PHOENIX_ENDPOINT }}"
          export ENV="${{ secrets.ENV }}"
          export FRAPPE_BACKEND_BASE_URL="${{ secrets.FRAPPE_BACKEND_BASE_URL }}"
          export FRAPPE_BACKEND_CLIENT_ID="${{ secrets.FRAPPE_BACKEND_CLIENT_ID }}"
          export FRAPPE_BACKEND_CLIENT_SECRET="${{ secrets.FRAPPE_BACKEND_CLIENT_SECRET }}"
          export DATABASE_URL="${{ secrets.DATABASE_URL }}"
          
          # Pull latest image and start services
          docker-compose pull
          docker-compose up -d
          
          # Show running containers
          docker-compose ps 